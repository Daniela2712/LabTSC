# 1
# Model Technology ModelSim SE vlog 6.6d Compiler 2010.11 Nov  1 2010
# -- Compiling package instr_register_pkg
# -- Compiling module instr_register
# -- Importing package instr_register_pkg
# -- Compiling package instr_register_test_sv_unit
# -- Importing package instr_register_pkg
# -- Compiling module instr_register_test
# -- Compiling interface tb_ifc
# -- Compiling package tb_ifc_sv_unit
# -- Importing package instr_register_pkg
# -- Compiling interface tb_ifc
# -- Compiling module top
# 
# Top level modules:
# 	top
# vsim +notimingchecks +code=bcesft +nowarnTSCALE +NUMBEROFTRANSACTION=5 -coverage -sva -quiet -sv_seed 67254299 -novopt top 
# Refreshing C:\Users\jdani\Desktop\lab2\sim\work.instr_register_pkg
# Refreshing C:\Users\jdani\Desktop\lab2\sim\work.top
# Refreshing C:\Users\jdani\Desktop\lab2\sim\work.tb_ifc_sv_unit
# Refreshing C:\Users\jdani\Desktop\lab2\sim\work.tb_ifc
# Refreshing C:\Users\jdani\Desktop\lab2\sim\work.instr_register_test_sv_unit
# Refreshing C:\Users\jdani\Desktop\lab2\sim\work.instr_register_test
# Refreshing C:\Users\jdani\Desktop\lab2\sim\work.instr_register
# ** Warning: (vsim-8441) ../lab01_testbench-interface/instr_register_class.svh(105): Clocking block output lab2_if.cb.opcode is not legal in this
# or another expression.
#         Region: /top/test
# ** Warning: (vsim-8441) ../lab01_testbench-interface/instr_register_class.svh(106): Clocking block output lab2_if.cb.operand_a is not legal in this
# or another expression.
#         Region: /top/test
# ** Warning: (vsim-8441) ../lab01_testbench-interface/instr_register_class.svh(107): Clocking block output lab2_if.cb.operand_b is not legal in this
# or another expression.
#         Region: /top/test
# ** Warning: (vsim-8441) ../lab01_testbench-interface/instr_register_class.svh(104): Clocking block output lab2_if.cb.write_pointer is not legal in this
# or another expression.
#         Region: /top/test
# ** Warning: (vsim-8441) ../lab01_testbench-interface/instr_register_class.svh(111): Clocking block output lab2_if.cb.read_pointer is not legal in this
# or another expression.
#         Region: /top/test
# 
# 
# ***********************************************************
# ***  THIS IS NOT A SELF-CHECKING TESTBENCH (YET).  YOU  ***
# ***  NEED TO VISUALLY VERIFY THAT THE OUTPUT VALUES     ***
# ***  MATCH THE INPUT VALUES FOR EACH REGISTER LOCATION  ***
# ***********************************************************
#  First display
# 
# Reseting the instruction register...
# 
# Writing values to register stack...
# Writing to register location 0: 
#   lab2_if.cb.opcode = 6 (DIV)
#   lab2_if.cb.operand_a = 8
#   lab2_if.cb.operand_b = 9
# 
# Writing to register location 1: 
#   lab2_if.cb.opcode = 2 (PASSB)
#   lab2_if.cb.operand_a = 12
#   lab2_if.cb.operand_b = 6
# 
# Writing to register location 2: 
#   lab2_if.cb.opcode = 0 (ZERO)
#   lab2_if.cb.operand_a = 15
#   lab2_if.cb.operand_b = 10
# 
# Writing to register location 3: 
#   lab2_if.cb.opcode = 4 (SUB)
#   lab2_if.cb.operand_a = 3
#   lab2_if.cb.operand_b = 15
# 
# Writing to register location 4: 
#   lab2_if.cb.opcode = 7 (MOD)
#   lab2_if.cb.operand_a = 10
#   lab2_if.cb.operand_b = 2
# 
# 
# Reading back the same register locations written...
# Read from register location 5: 
#   lab2_if.cb.opcode = 0 (ZERO)
#   lab2_if.cb.operand_a = 0
#   lab2_if.cb.operand_b = 0
# 
#   result    = 0
# 
# Read from register location 4: 
#   lab2_if.cb.opcode = 7 (MOD)
#   lab2_if.cb.operand_a = 10
#   lab2_if.cb.operand_b = 2
# 
#   result    = 0
# 
# Read from register location 3: 
#   lab2_if.cb.opcode = 4 (SUB)
#   lab2_if.cb.operand_a = 3
#   lab2_if.cb.operand_b = 15
# 
#   result    = 0
# 
# ** Error: SUB operation error: Expected result = -12 Actual result = 0
# 
#    Time: 95 ps  Scope: top.test.first_test.print_results File: ../lab01_testbench-interface/instr_register_class.svh Line: 137
# Read from register location 2: 
#   lab2_if.cb.opcode = 0 (ZERO)
#   lab2_if.cb.operand_a = 15
#   lab2_if.cb.operand_b = 10
# 
#   result    = 0
# 
# Read from register location 1: 
#   lab2_if.cb.opcode = 2 (PASSB)
#   lab2_if.cb.operand_a = 12
#   lab2_if.cb.operand_b = 6
# 
#   result    = 0
# 
# ** Error: PASSB operation error: Expected result = 6 Actual result = 0
# 
#    Time: 115 ps  Scope: top.test.first_test.print_results File: ../lab01_testbench-interface/instr_register_class.svh Line: 125
# Read from register location 0: 
#   lab2_if.cb.opcode = 6 (DIV)
#   lab2_if.cb.operand_a = 8
#   lab2_if.cb.operand_b = 9
# 
#   result    = 0
# 
# 
# ***********************************************************
# ***  THIS IS NOT A SELF-CHECKING TESTBENCH (YET).  YOU  ***
# ***  NEED TO VISUALLY VERIFY THAT THE OUTPUT VALUES     ***
# ***  MATCH THE INPUT VALUES FOR EACH REGISTER LOCATION  ***
# ***********************************************************
# 
# TEST FAILED (2 errors)
# ** Note: $finish    : ../lab01_testbench-interface/instr_register_class.svh(85)
#    Time: 130 ps  Iteration: 2  Instance: /top/test
# 1
# Break in Task run at ../lab01_testbench-interface/instr_register_class.svh line 85
# Simulation Breakpoint: 1
# Break in Task run at ../lab01_testbench-interface/instr_register_class.svh line 85
# MACRO ./run.do PAUSED at line 48
