# 1
# Model Technology ModelSim SE vlog 6.6d Compiler 2010.11 Nov  1 2010
# -- Compiling package instr_register_pkg
# -- Compiling module instr_register
# -- Importing package instr_register_pkg
# -- Compiling package instr_register_test_sv_unit
# -- Importing package instr_register_pkg
# -- Compiling module instr_register_test
# -- Compiling interface tb_ifc
# -- Compiling package tb_ifc_sv_unit
# -- Importing package instr_register_pkg
# -- Compiling interface tb_ifc
# -- Compiling module top
# 
# Top level modules:
# 	top
# vsim +notimingchecks +nowarnTSCALE -sva -nocoverage -quiet -novopt top 
# //  ModelSim SE 6.6d Nov  1 2010 
# //
# //  Copyright 1991-2010 Mentor Graphics Corporation
# //              All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND 
# //  PROPRIETARY INFORMATION WHICH IS THE PROPERTY
# //  OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS
# //  AND IS SUBJECT TO LICENSE TERMS.
# //
# Refreshing C:\Users\jdani\Desktop\lab2\sim\work.instr_register_pkg
# Refreshing C:\Users\jdani\Desktop\lab2\sim\work.top
# Refreshing C:\Users\jdani\Desktop\lab2\sim\work.tb_ifc_sv_unit
# Refreshing C:\Users\jdani\Desktop\lab2\sim\work.tb_ifc
# Refreshing C:\Users\jdani\Desktop\lab2\sim\work.instr_register_test_sv_unit
# Refreshing C:\Users\jdani\Desktop\lab2\sim\work.instr_register_test
# Refreshing C:\Users\jdani\Desktop\lab2\sim\work.instr_register
# ** Warning: (vsim-8441) ../lab01_testbench-interface/instr_register_class.svh(84): Clocking block output lab2_if.cb.opcode is not legal in this
# or another expression.
#         Region: /top/test
# ** Warning: (vsim-8441) ../lab01_testbench-interface/instr_register_class.svh(85): Clocking block output lab2_if.cb.operand_a is not legal in this
# or another expression.
#         Region: /top/test
# ** Warning: (vsim-8441) ../lab01_testbench-interface/instr_register_class.svh(86): Clocking block output lab2_if.cb.operand_b is not legal in this
# or another expression.
#         Region: /top/test
# ** Warning: (vsim-8441) ../lab01_testbench-interface/instr_register_class.svh(83): Clocking block output lab2_if.cb.write_pointer is not legal in this
# or another expression.
#         Region: /top/test
# ** Warning: (vsim-8441) ../lab01_testbench-interface/instr_register_class.svh(90): Clocking block output lab2_if.cb.read_pointer is not legal in this
# or another expression.
#         Region: /top/test
# 
# 
# ***********************************************************
# ***  THIS IS NOT A SELF-CHECKING TESTBENCH (YET).  YOU  ***
# ***  NEED TO VISUALLY VERIFY THAT THE OUTPUT VALUES     ***
# ***  MATCH THE INPUT VALUES FOR EACH REGISTER LOCATION  ***
# ***********************************************************
#  First display
# 
# Reseting the instruction register...
# 
# Writing values to register stack...
# Writing to register location 0: 
#   lab2_if.cb.opcode = 1 (PASSA)
#   lab2_if.cb.operand_a = 11
#   lab2_if.cb.operand_b = 6
# 
# Writing to register location 1: 
#   lab2_if.cb.opcode = 3 (ADD)
#   lab2_if.cb.operand_a = 1
#   lab2_if.cb.operand_b = 4
# 
# Writing to register location 2: 
#   lab2_if.cb.opcode = 2 (PASSB)
#   lab2_if.cb.operand_a = 14
#   lab2_if.cb.operand_b = 5
# 
# Writing to register location 3: 
#   lab2_if.cb.opcode = 3 (ADD)
#   lab2_if.cb.operand_a = 15
#   lab2_if.cb.operand_b = 1
# 
# Writing to register location 4: 
#   lab2_if.cb.opcode = 0 (ZERO)
#   lab2_if.cb.operand_a = 13
#   lab2_if.cb.operand_b = 7
# 
# Writing to register location 5: 
#   lab2_if.cb.opcode = 3 (ADD)
#   lab2_if.cb.operand_a = 10
#   lab2_if.cb.operand_b = 4
# 
# Writing to register location 6: 
#   lab2_if.cb.opcode = 1 (PASSA)
#   lab2_if.cb.operand_a = 11
#   lab2_if.cb.operand_b = 8
# 
# Writing to register location 7: 
#   lab2_if.cb.opcode = 1 (PASSA)
#   lab2_if.cb.operand_a = 13
#   lab2_if.cb.operand_b = 13
# 
# Writing to register location 8: 
#   lab2_if.cb.opcode = 2 (PASSB)
#   lab2_if.cb.operand_a = 8
#   lab2_if.cb.operand_b = 10
# 
# Writing to register location 9: 
#   lab2_if.cb.opcode = 5 (MULT)
#   lab2_if.cb.operand_a = 3
#   lab2_if.cb.operand_b = 4
# 
# Writing to register location 10: 
#   lab2_if.cb.opcode = 1 (PASSA)
#   lab2_if.cb.operand_a = 4
#   lab2_if.cb.operand_b = 1
# 
# Writing to register location 11: 
#   lab2_if.cb.opcode = 0 (ZERO)
#   lab2_if.cb.operand_a = 7
#   lab2_if.cb.operand_b = 7
# 
# Writing to register location 12: 
#   lab2_if.cb.opcode = 1 (PASSA)
#   lab2_if.cb.operand_a = 8
#   lab2_if.cb.operand_b = 3
# 
# Writing to register location 13: 
#   lab2_if.cb.opcode = 3 (ADD)
#   lab2_if.cb.operand_a = 4
#   lab2_if.cb.operand_b = 6
# 
# Writing to register location 14: 
#   lab2_if.cb.opcode = 7 (MOD)
#   lab2_if.cb.operand_a = 8
#   lab2_if.cb.operand_b = 14
# 
# Writing to register location 15: 
#   lab2_if.cb.opcode = 0 (ZERO)
#   lab2_if.cb.operand_a = 15
#   lab2_if.cb.operand_b = 1
# 
# Writing to register location 16: 
#   lab2_if.cb.opcode = 3 (ADD)
#   lab2_if.cb.operand_a = 9
#   lab2_if.cb.operand_b = 13
# 
# Writing to register location 17: 
#   lab2_if.cb.opcode = 0 (ZERO)
#   lab2_if.cb.operand_a = 5
#   lab2_if.cb.operand_b = 12
# 
# Writing to register location 18: 
#   lab2_if.cb.opcode = 2 (PASSB)
#   lab2_if.cb.operand_a = 6
#   lab2_if.cb.operand_b = 0
# 
# Writing to register location 19: 
#   lab2_if.cb.opcode = 2 (PASSB)
#   lab2_if.cb.operand_a = 10
#   lab2_if.cb.operand_b = 6
# 
# Writing to register location 20: 
#   lab2_if.cb.opcode = 4 (SUB)
#   lab2_if.cb.operand_a = 8
#   lab2_if.cb.operand_b = 0
# 
# Writing to register location 21: 
#   lab2_if.cb.opcode = 4 (SUB)
#   lab2_if.cb.operand_a = 9
#   lab2_if.cb.operand_b = 4
# 
# Writing to register location 22: 
#   lab2_if.cb.opcode = 4 (SUB)
#   lab2_if.cb.operand_a = 0
#   lab2_if.cb.operand_b = 10
# 
# Writing to register location 23: 
#   lab2_if.cb.opcode = 1 (PASSA)
#   lab2_if.cb.operand_a = 4
#   lab2_if.cb.operand_b = 0
# 
# Writing to register location 24: 
#   lab2_if.cb.opcode = 6 (DIV)
#   lab2_if.cb.operand_a = 5
#   lab2_if.cb.operand_b = 10
# 
# Writing to register location 25: 
#   lab2_if.cb.opcode = 7 (MOD)
#   lab2_if.cb.operand_a = 1
#   lab2_if.cb.operand_b = 9
# 
# Writing to register location 26: 
#   lab2_if.cb.opcode = 5 (MULT)
#   lab2_if.cb.operand_a = 1
#   lab2_if.cb.operand_b = 13
# 
# Writing to register location 27: 
#   lab2_if.cb.opcode = 5 (MULT)
#   lab2_if.cb.operand_a = 13
#   lab2_if.cb.operand_b = 2
# 
# Writing to register location 28: 
#   lab2_if.cb.opcode = 7 (MOD)
#   lab2_if.cb.operand_a = 6
#   lab2_if.cb.operand_b = 6
# 
# Writing to register location 29: 
#   lab2_if.cb.opcode = 6 (DIV)
#   lab2_if.cb.operand_a = 1
#   lab2_if.cb.operand_b = 3
# 
# Writing to register location 30: 
#   lab2_if.cb.opcode = 4 (SUB)
#   lab2_if.cb.operand_a = 3
#   lab2_if.cb.operand_b = 13
# 
# Writing to register location 31: 
#   lab2_if.cb.opcode = 3 (ADD)
#   lab2_if.cb.operand_a = 13
#   lab2_if.cb.operand_b = 10
# 
# Writing to register location 0: 
#   lab2_if.cb.opcode = 6 (DIV)
#   lab2_if.cb.operand_a = 4
#   lab2_if.cb.operand_b = 10
# 
# Writing to register location 1: 
#   lab2_if.cb.opcode = 7 (MOD)
#   lab2_if.cb.operand_a = 9
#   lab2_if.cb.operand_b = 12
# 
# Writing to register location 2: 
#   lab2_if.cb.opcode = 1 (PASSA)
#   lab2_if.cb.operand_a = 11
#   lab2_if.cb.operand_b = 5
# 
# Writing to register location 3: 
#   lab2_if.cb.opcode = 0 (ZERO)
#   lab2_if.cb.operand_a = 10
#   lab2_if.cb.operand_b = 7
# 
# Writing to register location 4: 
#   lab2_if.cb.opcode = 7 (MOD)
#   lab2_if.cb.operand_a = 2
#   lab2_if.cb.operand_b = 4
# 
# Writing to register location 5: 
#   lab2_if.cb.opcode = 2 (PASSB)
#   lab2_if.cb.operand_a = 15
#   lab2_if.cb.operand_b = 15
# 
# Writing to register location 6: 
#   lab2_if.cb.opcode = 7 (MOD)
#   lab2_if.cb.operand_a = 13
#   lab2_if.cb.operand_b = 11
# 
# Writing to register location 7: 
#   lab2_if.cb.opcode = 4 (SUB)
#   lab2_if.cb.operand_a = 1
#   lab2_if.cb.operand_b = 5
# 
# Writing to register location 8: 
#   lab2_if.cb.opcode = 7 (MOD)
#   lab2_if.cb.operand_a = 4
#   lab2_if.cb.operand_b = 4
# 
# Writing to register location 9: 
#   lab2_if.cb.opcode = 3 (ADD)
#   lab2_if.cb.operand_a = 7
#   lab2_if.cb.operand_b = 3
# 
# Writing to register location 10: 
#   lab2_if.cb.opcode = 1 (PASSA)
#   lab2_if.cb.operand_a = 15
#   lab2_if.cb.operand_b = 0
# 
# Writing to register location 11: 
#   lab2_if.cb.opcode = 4 (SUB)
#   lab2_if.cb.operand_a = 14
#   lab2_if.cb.operand_b = 5
# 
# Writing to register location 12: 
#   lab2_if.cb.opcode = 7 (MOD)
#   lab2_if.cb.operand_a = 4
#   lab2_if.cb.operand_b = 0
# 
# Writing to register location 13: 
#   lab2_if.cb.opcode = 7 (MOD)
#   lab2_if.cb.operand_a = 11
#   lab2_if.cb.operand_b = 13
# 
# Writing to register location 14: 
#   lab2_if.cb.opcode = 3 (ADD)
#   lab2_if.cb.operand_a = 6
#   lab2_if.cb.operand_b = 3
# 
# Writing to register location 15: 
#   lab2_if.cb.opcode = 3 (ADD)
#   lab2_if.cb.operand_a = 0
#   lab2_if.cb.operand_b = 5
# 
# Writing to register location 16: 
#   lab2_if.cb.opcode = 0 (ZERO)
#   lab2_if.cb.operand_a = 6
#   lab2_if.cb.operand_b = 1
# 
# Writing to register location 17: 
#   lab2_if.cb.opcode = 0 (ZERO)
#   lab2_if.cb.operand_a = 4
#   lab2_if.cb.operand_b = 1
# 
# Writing to register location 18: 
#   lab2_if.cb.opcode = 3 (ADD)
#   lab2_if.cb.operand_a = 14
#   lab2_if.cb.operand_b = 7
# 
# Writing to register location 19: 
#   lab2_if.cb.opcode = 2 (PASSB)
#   lab2_if.cb.operand_a = 4
#   lab2_if.cb.operand_b = 7
# 
# Writing to register location 20: 
#   lab2_if.cb.opcode = 3 (ADD)
#   lab2_if.cb.operand_a = 10
#   lab2_if.cb.operand_b = 9
# 
# Writing to register location 21: 
#   lab2_if.cb.opcode = 1 (PASSA)
#   lab2_if.cb.operand_a = 1
#   lab2_if.cb.operand_b = 0
# 
# Writing to register location 22: 
#   lab2_if.cb.opcode = 6 (DIV)
#   lab2_if.cb.operand_a = 8
#   lab2_if.cb.operand_b = 14
# 
# Writing to register location 23: 
#   lab2_if.cb.opcode = 7 (MOD)
#   lab2_if.cb.operand_a = 10
#   lab2_if.cb.operand_b = 15
# 
# Writing to register location 24: 
#   lab2_if.cb.opcode = 4 (SUB)
#   lab2_if.cb.operand_a = 0
#   lab2_if.cb.operand_b = 4
# 
# Writing to register location 25: 
#   lab2_if.cb.opcode = 6 (DIV)
#   lab2_if.cb.operand_a = 7
#   lab2_if.cb.operand_b = 12
# 
# Writing to register location 26: 
#   lab2_if.cb.opcode = 7 (MOD)
#   lab2_if.cb.operand_a = 14
#   lab2_if.cb.operand_b = 11
# 
# Writing to register location 27: 
#   lab2_if.cb.opcode = 2 (PASSB)
#   lab2_if.cb.operand_a = 3
#   lab2_if.cb.operand_b = 11
# 
# Writing to register location 28: 
#   lab2_if.cb.opcode = 4 (SUB)
#   lab2_if.cb.operand_a = 0
#   lab2_if.cb.operand_b = 4
# 
# Writing to register location 29: 
#   lab2_if.cb.opcode = 7 (MOD)
#   lab2_if.cb.operand_a = 3
#   lab2_if.cb.operand_b = 14
# 
# Writing to register location 30: 
#   lab2_if.cb.opcode = 6 (DIV)
#   lab2_if.cb.operand_a = 2
#   lab2_if.cb.operand_b = 10
# 
# Writing to register location 31: 
#   lab2_if.cb.opcode = 5 (MULT)
#   lab2_if.cb.operand_a = 11
#   lab2_if.cb.operand_b = 1
# 
# Writing to register location 0: 
#   lab2_if.cb.opcode = 1 (PASSA)
#   lab2_if.cb.operand_a = 0
#   lab2_if.cb.operand_b = 11
# 
# Writing to register location 1: 
#   lab2_if.cb.opcode = 3 (ADD)
#   lab2_if.cb.operand_a = 5
#   lab2_if.cb.operand_b = 9
# 
# Writing to register location 2: 
#   lab2_if.cb.opcode = 7 (MOD)
#   lab2_if.cb.operand_a = 10
#   lab2_if.cb.operand_b = 1
# 
# Writing to register location 3: 
#   lab2_if.cb.opcode = 0 (ZERO)
#   lab2_if.cb.operand_a = 13
#   lab2_if.cb.operand_b = 9
# 
# Writing to register location 4: 
#   lab2_if.cb.opcode = 1 (PASSA)
#   lab2_if.cb.operand_a = 10
#   lab2_if.cb.operand_b = 6
# 
# Writing to register location 5: 
#   lab2_if.cb.opcode = 5 (MULT)
#   lab2_if.cb.operand_a = 8
#   lab2_if.cb.operand_b = 4
# 
# Writing to register location 6: 
#   lab2_if.cb.opcode = 7 (MOD)
#   lab2_if.cb.operand_a = 10
#   lab2_if.cb.operand_b = 7
# 
# Writing to register location 7: 
#   lab2_if.cb.opcode = 0 (ZERO)
#   lab2_if.cb.operand_a = 0
#   lab2_if.cb.operand_b = 10
# 
# Writing to register location 8: 
#   lab2_if.cb.opcode = 0 (ZERO)
#   lab2_if.cb.operand_a = 10
#   lab2_if.cb.operand_b = 0
# 
# Writing to register location 9: 
#   lab2_if.cb.opcode = 2 (PASSB)
#   lab2_if.cb.operand_a = 0
#   lab2_if.cb.operand_b = 8
# 
# Writing to register location 10: 
#   lab2_if.cb.opcode = 4 (SUB)
#   lab2_if.cb.operand_a = 10
#   lab2_if.cb.operand_b = 8
# 
# Writing to register location 11: 
#   lab2_if.cb.opcode = 1 (PASSA)
#   lab2_if.cb.operand_a = 6
#   lab2_if.cb.operand_b = 0
# 
# Writing to register location 12: 
#   lab2_if.cb.opcode = 6 (DIV)
#   lab2_if.cb.operand_a = 8
#   lab2_if.cb.operand_b = 14
# 
# Writing to register location 13: 
#   lab2_if.cb.opcode = 4 (SUB)
#   lab2_if.cb.operand_a = 0
#   lab2_if.cb.operand_b = 13
# 
# Writing to register location 14: 
#   lab2_if.cb.opcode = 0 (ZERO)
#   lab2_if.cb.operand_a = 12
#   lab2_if.cb.operand_b = 5
# 
# Writing to register location 15: 
#   lab2_if.cb.opcode = 0 (ZERO)
#   lab2_if.cb.operand_a = 1
#   lab2_if.cb.operand_b = 9
# 
# Writing to register location 16: 
#   lab2_if.cb.opcode = 3 (ADD)
#   lab2_if.cb.operand_a = 1
#   lab2_if.cb.operand_b = 5
# 
# Writing to register location 17: 
#   lab2_if.cb.opcode = 0 (ZERO)
#   lab2_if.cb.operand_a = 9
#   lab2_if.cb.operand_b = 8
# 
# Writing to register location 18: 
#   lab2_if.cb.opcode = 7 (MOD)
#   lab2_if.cb.operand_a = 10
#   lab2_if.cb.operand_b = 13
# 
# Writing to register location 19: 
#   lab2_if.cb.opcode = 3 (ADD)
#   lab2_if.cb.operand_a = 6
#   lab2_if.cb.operand_b = 14
# 
# Writing to register location 20: 
#   lab2_if.cb.opcode = 7 (MOD)
#   lab2_if.cb.operand_a = 9
#   lab2_if.cb.operand_b = 10
# 
# Writing to register location 21: 
#   lab2_if.cb.opcode = 2 (PASSB)
#   lab2_if.cb.operand_a = 4
#   lab2_if.cb.operand_b = 5
# 
# Writing to register location 22: 
#   lab2_if.cb.opcode = 7 (MOD)
#   lab2_if.cb.operand_a = 4
#   lab2_if.cb.operand_b = 8
# 
# Writing to register location 23: 
#   lab2_if.cb.opcode = 4 (SUB)
#   lab2_if.cb.operand_a = 10
#   lab2_if.cb.operand_b = 12
# 
# Writing to register location 24: 
#   lab2_if.cb.opcode = 6 (DIV)
#   lab2_if.cb.operand_a = 8
#   lab2_if.cb.operand_b = 13
# 
# Writing to register location 25: 
#   lab2_if.cb.opcode = 5 (MULT)
#   lab2_if.cb.operand_a = 4
#   lab2_if.cb.operand_b = 2
# 
# Writing to register location 26: 
#   lab2_if.cb.opcode = 0 (ZERO)
#   lab2_if.cb.operand_a = 3
#   lab2_if.cb.operand_b = 10
# 
# Writing to register location 27: 
#   lab2_if.cb.opcode = 4 (SUB)
#   lab2_if.cb.operand_a = 6
#   lab2_if.cb.operand_b = 15
# 
# Writing to register location 28: 
#   lab2_if.cb.opcode = 1 (PASSA)
#   lab2_if.cb.operand_a = 11
#   lab2_if.cb.operand_b = 13
# 
# Writing to register location 29: 
#   lab2_if.cb.opcode = 6 (DIV)
#   lab2_if.cb.operand_a = 10
#   lab2_if.cb.operand_b = 12
# 
# Writing to register location 30: 
#   lab2_if.cb.opcode = 2 (PASSB)
#   lab2_if.cb.operand_a = 9
#   lab2_if.cb.operand_b = 11
# 
# Writing to register location 31: 
#   lab2_if.cb.opcode = 5 (MULT)
#   lab2_if.cb.operand_a = 6
#   lab2_if.cb.operand_b = 14
# 
# Writing to register location 0: 
#   lab2_if.cb.opcode = 1 (PASSA)
#   lab2_if.cb.operand_a = 0
#   lab2_if.cb.operand_b = 2
# 
# Writing to register location 1: 
#   lab2_if.cb.opcode = 7 (MOD)
#   lab2_if.cb.operand_a = 3
#   lab2_if.cb.operand_b = 0
# 
# Writing to register location 2: 
#   lab2_if.cb.opcode = 4 (SUB)
#   lab2_if.cb.operand_a = 10
#   lab2_if.cb.operand_b = 5
# 
# Writing to register location 3: 
#   lab2_if.cb.opcode = 3 (ADD)
#   lab2_if.cb.operand_a = 10
#   lab2_if.cb.operand_b = 12
# 
# 
# Reading back the same register locations written...
# Read from register location 4: 
#   lab2_if.cb.opcode = 1 (PASSA)
#   lab2_if.cb.operand_a = 10
#   lab2_if.cb.operand_b = 6
# 
#   result    = 10
# 
# Read from register location 3: 
#   lab2_if.cb.opcode = 3 (ADD)
#   lab2_if.cb.operand_a = 10
#   lab2_if.cb.operand_b = 12
# 
#   result    = 22
# 
# Read from register location 2: 
#   lab2_if.cb.opcode = 4 (SUB)
#   lab2_if.cb.operand_a = 10
#   lab2_if.cb.operand_b = 5
# 
#   result    = 5
# 
# Read from register location 1: 
#   lab2_if.cb.opcode = 7 (MOD)
#   lab2_if.cb.operand_a = 3
#   lab2_if.cb.operand_b = 0
# 
#   result    = x
# 
# Read from register location 0: 
#   lab2_if.cb.opcode = 1 (PASSA)
#   lab2_if.cb.operand_a = 0
#   lab2_if.cb.operand_b = 2
# 
#   result    = 0
# 
# Read from register location 31: 
#   lab2_if.cb.opcode = 5 (MULT)
#   lab2_if.cb.operand_a = 6
#   lab2_if.cb.operand_b = 14
# 
#   result    = 84
# 
# Read from register location 30: 
#   lab2_if.cb.opcode = 2 (PASSB)
#   lab2_if.cb.operand_a = 9
#   lab2_if.cb.operand_b = 11
# 
#   result    = 11
# 
# Read from register location 29: 
#   lab2_if.cb.opcode = 6 (DIV)
#   lab2_if.cb.operand_a = 10
#   lab2_if.cb.operand_b = 12
# 
#   result    = 0
# 
# Read from register location 28: 
#   lab2_if.cb.opcode = 1 (PASSA)
#   lab2_if.cb.operand_a = 11
#   lab2_if.cb.operand_b = 13
# 
#   result    = 11
# 
# Read from register location 27: 
#   lab2_if.cb.opcode = 4 (SUB)
#   lab2_if.cb.operand_a = 6
#   lab2_if.cb.operand_b = 15
# 
#   result    = -9
# 
# Read from register location 26: 
#   lab2_if.cb.opcode = 0 (ZERO)
#   lab2_if.cb.operand_a = 3
#   lab2_if.cb.operand_b = 10
# 
#   result    = 0
# 
# Read from register location 25: 
#   lab2_if.cb.opcode = 5 (MULT)
#   lab2_if.cb.operand_a = 4
#   lab2_if.cb.operand_b = 2
# 
#   result    = 8
# 
# Read from register location 24: 
#   lab2_if.cb.opcode = 6 (DIV)
#   lab2_if.cb.operand_a = 8
#   lab2_if.cb.operand_b = 13
# 
#   result    = 0
# 
# Read from register location 23: 
#   lab2_if.cb.opcode = 4 (SUB)
#   lab2_if.cb.operand_a = 10
#   lab2_if.cb.operand_b = 12
# 
#   result    = -2
# 
# Read from register location 22: 
#   lab2_if.cb.opcode = 7 (MOD)
#   lab2_if.cb.operand_a = 4
#   lab2_if.cb.operand_b = 8
# 
#   result    = 4
# 
# Read from register location 21: 
#   lab2_if.cb.opcode = 2 (PASSB)
#   lab2_if.cb.operand_a = 4
#   lab2_if.cb.operand_b = 5
# 
#   result    = 5
# 
# Read from register location 20: 
#   lab2_if.cb.opcode = 7 (MOD)
#   lab2_if.cb.operand_a = 9
#   lab2_if.cb.operand_b = 10
# 
#   result    = 9
# 
# Read from register location 19: 
#   lab2_if.cb.opcode = 3 (ADD)
#   lab2_if.cb.operand_a = 6
#   lab2_if.cb.operand_b = 14
# 
#   result    = 20
# 
# Read from register location 18: 
#   lab2_if.cb.opcode = 7 (MOD)
#   lab2_if.cb.operand_a = 10
#   lab2_if.cb.operand_b = 13
# 
#   result    = 10
# 
# Read from register location 17: 
#   lab2_if.cb.opcode = 0 (ZERO)
#   lab2_if.cb.operand_a = 9
#   lab2_if.cb.operand_b = 8
# 
#   result    = 0
# 
# Read from register location 16: 
#   lab2_if.cb.opcode = 3 (ADD)
#   lab2_if.cb.operand_a = 1
#   lab2_if.cb.operand_b = 5
# 
#   result    = 6
# 
# Read from register location 15: 
#   lab2_if.cb.opcode = 0 (ZERO)
#   lab2_if.cb.operand_a = 1
#   lab2_if.cb.operand_b = 9
# 
#   result    = 0
# 
# Read from register location 14: 
#   lab2_if.cb.opcode = 0 (ZERO)
#   lab2_if.cb.operand_a = 12
#   lab2_if.cb.operand_b = 5
# 
#   result    = 0
# 
# Read from register location 13: 
#   lab2_if.cb.opcode = 4 (SUB)
#   lab2_if.cb.operand_a = 0
#   lab2_if.cb.operand_b = 13
# 
#   result    = -13
# 
# Read from register location 12: 
#   lab2_if.cb.opcode = 6 (DIV)
#   lab2_if.cb.operand_a = 8
#   lab2_if.cb.operand_b = 14
# 
#   result    = 0
# 
# Read from register location 11: 
#   lab2_if.cb.opcode = 1 (PASSA)
#   lab2_if.cb.operand_a = 6
#   lab2_if.cb.operand_b = 0
# 
#   result    = 6
# 
# Read from register location 10: 
#   lab2_if.cb.opcode = 4 (SUB)
#   lab2_if.cb.operand_a = 10
#   lab2_if.cb.operand_b = 8
# 
#   result    = 2
# 
# Read from register location 9: 
#   lab2_if.cb.opcode = 2 (PASSB)
#   lab2_if.cb.operand_a = 0
#   lab2_if.cb.operand_b = 8
# 
#   result    = 8
# 
# Read from register location 8: 
#   lab2_if.cb.opcode = 0 (ZERO)
#   lab2_if.cb.operand_a = 10
#   lab2_if.cb.operand_b = 0
# 
#   result    = 0
# 
# Read from register location 7: 
#   lab2_if.cb.opcode = 0 (ZERO)
#   lab2_if.cb.operand_a = 0
#   lab2_if.cb.operand_b = 10
# 
#   result    = 0
# 
# Read from register location 6: 
#   lab2_if.cb.opcode = 7 (MOD)
#   lab2_if.cb.operand_a = 10
#   lab2_if.cb.operand_b = 7
# 
#   result    = 3
# 
# Read from register location 5: 
#   lab2_if.cb.opcode = 5 (MULT)
#   lab2_if.cb.operand_a = 8
#   lab2_if.cb.operand_b = 4
# 
#   result    = 32
# 
# Read from register location 4: 
#   lab2_if.cb.opcode = 1 (PASSA)
#   lab2_if.cb.operand_a = 10
#   lab2_if.cb.operand_b = 6
# 
#   result    = 10
# 
# Read from register location 3: 
#   lab2_if.cb.opcode = 3 (ADD)
#   lab2_if.cb.operand_a = 10
#   lab2_if.cb.operand_b = 12
# 
#   result    = 22
# 
# Read from register location 2: 
#   lab2_if.cb.opcode = 4 (SUB)
#   lab2_if.cb.operand_a = 10
#   lab2_if.cb.operand_b = 5
# 
#   result    = 5
# 
# Read from register location 1: 
#   lab2_if.cb.opcode = 7 (MOD)
#   lab2_if.cb.operand_a = 3
#   lab2_if.cb.operand_b = 0
# 
#   result    = x
# 
# Read from register location 0: 
#   lab2_if.cb.opcode = 1 (PASSA)
#   lab2_if.cb.operand_a = 0
#   lab2_if.cb.operand_b = 2
# 
#   result    = 0
# 
# Read from register location 31: 
#   lab2_if.cb.opcode = 5 (MULT)
#   lab2_if.cb.operand_a = 6
#   lab2_if.cb.operand_b = 14
# 
#   result    = 84
# 
# Read from register location 30: 
#   lab2_if.cb.opcode = 2 (PASSB)
#   lab2_if.cb.operand_a = 9
#   lab2_if.cb.operand_b = 11
# 
#   result    = 11
# 
# Read from register location 29: 
#   lab2_if.cb.opcode = 6 (DIV)
#   lab2_if.cb.operand_a = 10
#   lab2_if.cb.operand_b = 12
# 
#   result    = 0
# 
# Read from register location 28: 
#   lab2_if.cb.opcode = 1 (PASSA)
#   lab2_if.cb.operand_a = 11
#   lab2_if.cb.operand_b = 13
# 
#   result    = 11
# 
# Read from register location 27: 
#   lab2_if.cb.opcode = 4 (SUB)
#   lab2_if.cb.operand_a = 6
#   lab2_if.cb.operand_b = 15
# 
#   result    = -9
# 
# Read from register location 26: 
#   lab2_if.cb.opcode = 0 (ZERO)
#   lab2_if.cb.operand_a = 3
#   lab2_if.cb.operand_b = 10
# 
#   result    = 0
# 
# Read from register location 25: 
#   lab2_if.cb.opcode = 5 (MULT)
#   lab2_if.cb.operand_a = 4
#   lab2_if.cb.operand_b = 2
# 
#   result    = 8
# 
# Read from register location 24: 
#   lab2_if.cb.opcode = 6 (DIV)
#   lab2_if.cb.operand_a = 8
#   lab2_if.cb.operand_b = 13
# 
#   result    = 0
# 
# Read from register location 23: 
#   lab2_if.cb.opcode = 4 (SUB)
#   lab2_if.cb.operand_a = 10
#   lab2_if.cb.operand_b = 12
# 
#   result    = -2
# 
# Read from register location 22: 
#   lab2_if.cb.opcode = 7 (MOD)
#   lab2_if.cb.operand_a = 4
#   lab2_if.cb.operand_b = 8
# 
#   result    = 4
# 
# Read from register location 21: 
#   lab2_if.cb.opcode = 2 (PASSB)
#   lab2_if.cb.operand_a = 4
#   lab2_if.cb.operand_b = 5
# 
#   result    = 5
# 
# Read from register location 20: 
#   lab2_if.cb.opcode = 7 (MOD)
#   lab2_if.cb.operand_a = 9
#   lab2_if.cb.operand_b = 10
# 
#   result    = 9
# 
# Read from register location 19: 
#   lab2_if.cb.opcode = 3 (ADD)
#   lab2_if.cb.operand_a = 6
#   lab2_if.cb.operand_b = 14
# 
#   result    = 20
# 
# Read from register location 18: 
#   lab2_if.cb.opcode = 7 (MOD)
#   lab2_if.cb.operand_a = 10
#   lab2_if.cb.operand_b = 13
# 
#   result    = 10
# 
# Read from register location 17: 
#   lab2_if.cb.opcode = 0 (ZERO)
#   lab2_if.cb.operand_a = 9
#   lab2_if.cb.operand_b = 8
# 
#   result    = 0
# 
# Read from register location 16: 
#   lab2_if.cb.opcode = 3 (ADD)
#   lab2_if.cb.operand_a = 1
#   lab2_if.cb.operand_b = 5
# 
#   result    = 6
# 
# Read from register location 15: 
#   lab2_if.cb.opcode = 0 (ZERO)
#   lab2_if.cb.operand_a = 1
#   lab2_if.cb.operand_b = 9
# 
#   result    = 0
# 
# Read from register location 14: 
#   lab2_if.cb.opcode = 0 (ZERO)
#   lab2_if.cb.operand_a = 12
#   lab2_if.cb.operand_b = 5
# 
#   result    = 0
# 
# Read from register location 13: 
#   lab2_if.cb.opcode = 4 (SUB)
#   lab2_if.cb.operand_a = 0
#   lab2_if.cb.operand_b = 13
# 
#   result    = -13
# 
# Read from register location 12: 
#   lab2_if.cb.opcode = 6 (DIV)
#   lab2_if.cb.operand_a = 8
#   lab2_if.cb.operand_b = 14
# 
#   result    = 0
# 
# Read from register location 11: 
#   lab2_if.cb.opcode = 1 (PASSA)
#   lab2_if.cb.operand_a = 6
#   lab2_if.cb.operand_b = 0
# 
#   result    = 6
# 
# Read from register location 10: 
#   lab2_if.cb.opcode = 4 (SUB)
#   lab2_if.cb.operand_a = 10
#   lab2_if.cb.operand_b = 8
# 
#   result    = 2
# 
# Read from register location 9: 
#   lab2_if.cb.opcode = 2 (PASSB)
#   lab2_if.cb.operand_a = 0
#   lab2_if.cb.operand_b = 8
# 
#   result    = 8
# 
# Read from register location 8: 
#   lab2_if.cb.opcode = 0 (ZERO)
#   lab2_if.cb.operand_a = 10
#   lab2_if.cb.operand_b = 0
# 
#   result    = 0
# 
# Read from register location 7: 
#   lab2_if.cb.opcode = 0 (ZERO)
#   lab2_if.cb.operand_a = 0
#   lab2_if.cb.operand_b = 10
# 
#   result    = 0
# 
# Read from register location 6: 
#   lab2_if.cb.opcode = 7 (MOD)
#   lab2_if.cb.operand_a = 10
#   lab2_if.cb.operand_b = 7
# 
#   result    = 3
# 
# Read from register location 5: 
#   lab2_if.cb.opcode = 5 (MULT)
#   lab2_if.cb.operand_a = 8
#   lab2_if.cb.operand_b = 4
# 
#   result    = 32
# 
# Read from register location 4: 
#   lab2_if.cb.opcode = 1 (PASSA)
#   lab2_if.cb.operand_a = 10
#   lab2_if.cb.operand_b = 6
# 
#   result    = 10
# 
# Read from register location 3: 
#   lab2_if.cb.opcode = 3 (ADD)
#   lab2_if.cb.operand_a = 10
#   lab2_if.cb.operand_b = 12
# 
#   result    = 22
# 
# Read from register location 2: 
#   lab2_if.cb.opcode = 4 (SUB)
#   lab2_if.cb.operand_a = 10
#   lab2_if.cb.operand_b = 5
# 
#   result    = 5
# 
# Read from register location 1: 
#   lab2_if.cb.opcode = 7 (MOD)
#   lab2_if.cb.operand_a = 3
#   lab2_if.cb.operand_b = 0
# 
#   result    = x
# 
# Read from register location 0: 
#   lab2_if.cb.opcode = 1 (PASSA)
#   lab2_if.cb.operand_a = 0
#   lab2_if.cb.operand_b = 2
# 
#   result    = 0
# 
# Read from register location 31: 
#   lab2_if.cb.opcode = 5 (MULT)
#   lab2_if.cb.operand_a = 6
#   lab2_if.cb.operand_b = 14
# 
#   result    = 84
# 
# Read from register location 30: 
#   lab2_if.cb.opcode = 2 (PASSB)
#   lab2_if.cb.operand_a = 9
#   lab2_if.cb.operand_b = 11
# 
#   result    = 11
# 
# Read from register location 29: 
#   lab2_if.cb.opcode = 6 (DIV)
#   lab2_if.cb.operand_a = 10
#   lab2_if.cb.operand_b = 12
# 
#   result    = 0
# 
# Read from register location 28: 
#   lab2_if.cb.opcode = 1 (PASSA)
#   lab2_if.cb.operand_a = 11
#   lab2_if.cb.operand_b = 13
# 
#   result    = 11
# 
# Read from register location 27: 
#   lab2_if.cb.opcode = 4 (SUB)
#   lab2_if.cb.operand_a = 6
#   lab2_if.cb.operand_b = 15
# 
#   result    = -9
# 
# Read from register location 26: 
#   lab2_if.cb.opcode = 0 (ZERO)
#   lab2_if.cb.operand_a = 3
#   lab2_if.cb.operand_b = 10
# 
#   result    = 0
# 
# Read from register location 25: 
#   lab2_if.cb.opcode = 5 (MULT)
#   lab2_if.cb.operand_a = 4
#   lab2_if.cb.operand_b = 2
# 
#   result    = 8
# 
# Read from register location 24: 
#   lab2_if.cb.opcode = 6 (DIV)
#   lab2_if.cb.operand_a = 8
#   lab2_if.cb.operand_b = 13
# 
#   result    = 0
# 
# Read from register location 23: 
#   lab2_if.cb.opcode = 4 (SUB)
#   lab2_if.cb.operand_a = 10
#   lab2_if.cb.operand_b = 12
# 
#   result    = -2
# 
# Read from register location 22: 
#   lab2_if.cb.opcode = 7 (MOD)
#   lab2_if.cb.operand_a = 4
#   lab2_if.cb.operand_b = 8
# 
#   result    = 4
# 
# Read from register location 21: 
#   lab2_if.cb.opcode = 2 (PASSB)
#   lab2_if.cb.operand_a = 4
#   lab2_if.cb.operand_b = 5
# 
#   result    = 5
# 
# Read from register location 20: 
#   lab2_if.cb.opcode = 7 (MOD)
#   lab2_if.cb.operand_a = 9
#   lab2_if.cb.operand_b = 10
# 
#   result    = 9
# 
# Read from register location 19: 
#   lab2_if.cb.opcode = 3 (ADD)
#   lab2_if.cb.operand_a = 6
#   lab2_if.cb.operand_b = 14
# 
#   result    = 20
# 
# Read from register location 18: 
#   lab2_if.cb.opcode = 7 (MOD)
#   lab2_if.cb.operand_a = 10
#   lab2_if.cb.operand_b = 13
# 
#   result    = 10
# 
# Read from register location 17: 
#   lab2_if.cb.opcode = 0 (ZERO)
#   lab2_if.cb.operand_a = 9
#   lab2_if.cb.operand_b = 8
# 
#   result    = 0
# 
# Read from register location 16: 
#   lab2_if.cb.opcode = 3 (ADD)
#   lab2_if.cb.operand_a = 1
#   lab2_if.cb.operand_b = 5
# 
#   result    = 6
# 
# Read from register location 15: 
#   lab2_if.cb.opcode = 0 (ZERO)
#   lab2_if.cb.operand_a = 1
#   lab2_if.cb.operand_b = 9
# 
#   result    = 0
# 
# Read from register location 14: 
#   lab2_if.cb.opcode = 0 (ZERO)
#   lab2_if.cb.operand_a = 12
#   lab2_if.cb.operand_b = 5
# 
#   result    = 0
# 
# Read from register location 13: 
#   lab2_if.cb.opcode = 4 (SUB)
#   lab2_if.cb.operand_a = 0
#   lab2_if.cb.operand_b = 13
# 
#   result    = -13
# 
# Read from register location 12: 
#   lab2_if.cb.opcode = 6 (DIV)
#   lab2_if.cb.operand_a = 8
#   lab2_if.cb.operand_b = 14
# 
#   result    = 0
# 
# Read from register location 11: 
#   lab2_if.cb.opcode = 1 (PASSA)
#   lab2_if.cb.operand_a = 6
#   lab2_if.cb.operand_b = 0
# 
#   result    = 6
# 
# Read from register location 10: 
#   lab2_if.cb.opcode = 4 (SUB)
#   lab2_if.cb.operand_a = 10
#   lab2_if.cb.operand_b = 8
# 
#   result    = 2
# 
# Read from register location 9: 
#   lab2_if.cb.opcode = 2 (PASSB)
#   lab2_if.cb.operand_a = 0
#   lab2_if.cb.operand_b = 8
# 
#   result    = 8
# 
# Read from register location 8: 
#   lab2_if.cb.opcode = 0 (ZERO)
#   lab2_if.cb.operand_a = 10
#   lab2_if.cb.operand_b = 0
# 
#   result    = 0
# 
# Read from register location 7: 
#   lab2_if.cb.opcode = 0 (ZERO)
#   lab2_if.cb.operand_a = 0
#   lab2_if.cb.operand_b = 10
# 
#   result    = 0
# 
# Read from register location 6: 
#   lab2_if.cb.opcode = 7 (MOD)
#   lab2_if.cb.operand_a = 10
#   lab2_if.cb.operand_b = 7
# 
#   result    = 3
# 
# Read from register location 5: 
#   lab2_if.cb.opcode = 5 (MULT)
#   lab2_if.cb.operand_a = 8
#   lab2_if.cb.operand_b = 4
# 
#   result    = 32
# 
# Read from register location 4: 
#   lab2_if.cb.opcode = 1 (PASSA)
#   lab2_if.cb.operand_a = 10
#   lab2_if.cb.operand_b = 6
# 
#   result    = 10
# 
# Read from register location 3: 
#   lab2_if.cb.opcode = 3 (ADD)
#   lab2_if.cb.operand_a = 10
#   lab2_if.cb.operand_b = 12
# 
#   result    = 22
# 
# Read from register location 2: 
#   lab2_if.cb.opcode = 4 (SUB)
#   lab2_if.cb.operand_a = 10
#   lab2_if.cb.operand_b = 5
# 
#   result    = 5
# 
# Read from register location 1: 
#   lab2_if.cb.opcode = 7 (MOD)
#   lab2_if.cb.operand_a = 3
#   lab2_if.cb.operand_b = 0
# 
#   result    = x
# 
# Read from register location 0: 
#   lab2_if.cb.opcode = 1 (PASSA)
#   lab2_if.cb.operand_a = 0
#   lab2_if.cb.operand_b = 2
# 
#   result    = 0
# 
# 
# ***********************************************************
# ***  THIS IS NOT A SELF-CHECKING TESTBENCH (YET).  YOU  ***
# ***  NEED TO VISUALLY VERIFY THAT THE OUTPUT VALUES     ***
# ***  MATCH THE INPUT VALUES FOR EACH REGISTER LOCATION  ***
# ***********************************************************
# 
# ** Note: $finish    : ../lab01_testbench-interface/instr_register_class.svh(65)
#    Time: 2030 ns  Iteration: 2  Instance: /top/test
